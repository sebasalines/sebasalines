{"version":3,"sources":["helpers/responsive.ts","components/Contact/index.tsx","components/Cta/index.tsx","components/Footer/index.tsx","components/Header/index.tsx","assets/icons/github.svg","assets/icons/at-sign.svg","assets/icons/gitlab.svg","assets/icons/globe.svg","assets/icons/home.svg","assets/icons/mail.svg","components/SvgIcon/index.tsx","components/Projects/index.tsx","components/References/index.tsx","helpers/getRandom.ts","components/Presentation/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["sizes","xs","sm","md","lg","xl","responsive","data","final","css","Object","keys","size","startsWith","width","replace","max","min","Container","styled","section","props","theme","colors","white","font","body","gtemd","Contact","href","rel","target","Section","fancy","gtelg","Cta","children","footer","grey","FooterItem","FooterLinkItem","Footer","icon","Base","header","Brand","div","primary","Header","className","allIcons","IconGithub","IconAtSign","IconGitlab","IconGlobe","IconHome","IconMail","Img","img","SvgIcon","imgProps","src","lowContrast","ProjectCard","a","secondary","Stack","span","Grid","allProjects","url","title","lang","Project","alt","Projects","map","project","references","name","email","randomRefs","arr","n","result","Array","len","length","taken","RangeError","x","Math","floor","random","getRandom","ReferenceContainer","article","Button","button","Reference","References","maxPage","ceil","paginate","i","slice","useState","pageIndex","setPageIndex","refs","setRefs","useEffect","ref","onClick","Column","Presentation","main","appTheme","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a955487d.chunk.js","sourcesContent":["import { css, FlattenSimpleInterpolation } from \"styled-components\";\r\n\r\nconst sizes = {\r\n    xs: [0, 360],\r\n    sm: [361, 749],\r\n    md: [750, 1024],\r\n    lg: [1025, 1280],\r\n    xl: [1281, 9001],\r\n}\r\n\r\ninterface Responsive {\r\n    xs?: FlattenSimpleInterpolation\r\n    ltexs?: FlattenSimpleInterpolation\r\n    gtexs?: FlattenSimpleInterpolation\r\n    sm?: FlattenSimpleInterpolation\r\n    ltesm?: FlattenSimpleInterpolation\r\n    gtesm?: FlattenSimpleInterpolation\r\n    md?: FlattenSimpleInterpolation\r\n    ltemd?: FlattenSimpleInterpolation\r\n    gtemd?: FlattenSimpleInterpolation\r\n    lg?: FlattenSimpleInterpolation\r\n    ltelg?: FlattenSimpleInterpolation\r\n    gtelg?: FlattenSimpleInterpolation\r\n    xl?: FlattenSimpleInterpolation\r\n    ltexl?: FlattenSimpleInterpolation\r\n    gtexl?: FlattenSimpleInterpolation\r\n}\r\nexport function responsive(data: Responsive): FlattenSimpleInterpolation {\r\n    let final = css``\r\n\r\n    // TODO: refactor this, the idea is good but execution is crap\r\n    for(const size of Object.keys(data)) {\r\n        if (size.startsWith('lte')) {\r\n            const width = size.replace('lte', '')  \r\n            const [, max] = sizes[width]\r\n            final = css`\r\n                ${final}\r\n                @media (max-width: ${max}px) {\r\n                    ${data[size]}\r\n                }\r\n            `\r\n            continue\r\n        }\r\n\r\n        if (size.startsWith('gte')) {\r\n            const width = size.replace('gte', '')  \r\n            const [min] = sizes[width]\r\n            final = css`\r\n                ${final}\r\n                @media (min-width: ${min}px) {\r\n                    ${data[size]}\r\n                }\r\n            `\r\n            continue\r\n        }\r\n\r\n        const [min, max] = sizes[size]\r\n        final = css`\r\n            ${final}\r\n            @media (min-width: ${min}px) and (max-width: ${max}px) {\r\n                ${data[size]}\r\n            }\r\n        `\r\n    }\r\n\r\n    return final \r\n}","import styled, { css } from 'styled-components'\r\nimport { responsive } from '../../helpers'\r\n\r\nconst Container = styled.section`\r\n${props => css`\r\ncolor: ${props.theme.colors.white};\r\nfont-size: 14px;\r\nline-height: 16px;\r\nfont-family: '${props.theme.font.body}', serif;\r\npadding: 0 18px;\r\nmargin: 20px 0;\r\nwidth: 100%;\r\np {\r\n    text-align: center;\r\n    padding: 0;\r\n    max-width: 320px;\r\n    margin: 0 auto;\r\n}\r\n\r\n${responsive({\r\n    gtemd: css`\r\n        margin: 42px auto;\r\n        p {\r\n            max-width: 480px;\r\n            font-size: 18px;\r\n            line-height: 20px;\r\n        }\r\n    `,\r\n})}\r\n\r\n`}\r\n`\r\n\r\nexport const Contact: React.FC = props => {\r\n    return (\r\n        <Container>\r\n            <p>I'm always open to build cool software and I'm very tech-agnostic, so feel free get in touch and let's talk about your project ideas.</p>\r\n            <br />\r\n            <p>The best way to reach me is to <a href=\"mailto:salines.sebastian@gmail.com\" rel=\"noreferrer\" target=\"_blank\">send me an email</a>. You can also <a href=\"javacript:void(0)\" rel=\"noreferrer\" target=\"_blank\">download my CV</a>, if you're into that kind of thing.</p>\r\n        </Container>\r\n    )\r\n}","import styled, { css } from 'styled-components'\r\nimport { responsive } from '../../helpers'\r\n\r\nconst Section = styled.section`\r\n${props => css`\r\ncolor: ${props.theme.colors.white};\r\nfont-family: '${props.theme.font.fancy}', serif;\r\ntext-align: right;\r\nh1 {\r\n    font-size: 42px;\r\n    line-height: 48px;\r\n    font-weight: 400;\r\n    text-shadow: 1px 1px 0px 0px rgba(0, 0, 0, 1);\r\n    padding: 0;\r\n    margin: 0;\r\n}\r\npadding: 0 18px;\r\nmargin: 48px 0 36px 0;\r\n${responsive({\r\n    gtemd: css`\r\n        margin: 62px 0 36px 0;\r\n        padding: 0 62px;\r\n        h1 {\r\n            font-size: 78px;\r\n            line-height: 82px;\r\n        }\r\n    `,\r\n    gtelg: css`\r\n        width: 100%;\r\n        h1 {\r\n            font-size: 78px;\r\n            line-height: 82px;\r\n            max-width: 880px;\r\n            margin: 0 auto;\r\n        }\r\n    `,\r\n\r\n})}\r\n`}\r\n`\r\n\r\nexport const Cta: React.FC = props => {\r\n    // TODO: if nothing else is added to cta delete this and only export Section (renamed) \r\n    return (\r\n        <Section><h1>{props.children}</h1></Section>\r\n    )\r\n}","import styled, { css } from 'styled-components'\r\nimport { responsive } from '../../helpers'\r\n\r\nexport const Container = styled.footer`\r\n${props => css`\r\ncolor: ${props.theme.colors.grey};\r\nfont-family: '${props.theme.font.body}', 'sans-serif';\r\n\r\ntext-align: center;\r\nmargin: 8px 0;\r\nspan, a {\r\n    font-size: 12px;\r\n    line-height: 14px;\r\n\r\n    ${responsive({\r\n        gtemd: css`\r\n            &:last-child {\r\n                &:before {\r\n                    content: \"-\";\r\n                    font-size: 14px;\r\n                    line-height: 14px;\r\n                }\r\n            }\r\n        `\r\n    })}\r\n    \r\n}\r\nimg {\r\n    display: none;\r\n    width: 14px;\r\n    vertical-align: middle;\r\n    stroke: blue;\r\n    svg {\r\n        stroke: blue;\r\n    }\r\n}\r\n`}\r\n`\r\n\r\nconst FooterItem = props => {\r\n    return (\r\n        <span>\r\n            &nbsp;{props.children}\r\n        </span>\r\n    )\r\n}\r\nconst FooterLinkItem = props => {\r\n    return (\r\n        <a href={props.href} rel=\"noreferrer\" target=\"_blank\">\r\n            &nbsp;{props.children}\r\n        </a>\r\n    )\r\n}\r\n\r\nexport const Footer: React.FC = props => {\r\n    return (\r\n        <Container>\r\n            <FooterLinkItem icon=\"at-sign\" href=\"mailto:salines.sebastian@gmail.com\">salines.sebastian@gmail.com</FooterLinkItem>\r\n            &nbsp;\r\n            <FooterItem icon=\"home\">Montevideo, Uruguay</FooterItem>\r\n        </Container>\r\n    )\r\n}","import styled, { css } from 'styled-components'\r\nimport { responsive } from '../../helpers';\r\n\r\nconst Base = styled.header`\r\n${props => css`\r\nbackground-color: ${props.theme.colors.white};\r\nwidth: 100%;\r\npadding: 8px 0 16px 0;\r\n\r\n${responsive({\r\n    gtemd: css`\r\n        display: flex;\r\n        padding: 0 62px;\r\n        margin-top: 18px;\r\n    `,\r\n\r\n})}\r\n\r\n`}\r\n`;\r\n\r\nconst Brand = styled.div`\r\n${props => css`\r\nbackground-color: ${props.theme.colors.primary};\r\npadding: 6px 18px;\r\ndisplay: flex;\r\nflex-flow: column nowrap;\r\nalign-items: flex-end;\r\njustify-content: flex-start;\r\n\r\nspan {\r\n    font-size: 18px;\r\n    line-height: 20px;\r\n    font-family: 'Hind', sans-serif;\r\n    color: ${props.theme.colors.white};\r\n    text-transform: uppercase;\r\n    &.sub {\r\n        font-size: 12px;\r\n        line-height: 12px;\r\n    }\r\n}\r\n\r\n${responsive({\r\n    gtemd: css`\r\n        padding-left: 62px;\r\n    `,\r\n\r\n})}\r\n\r\n`}\r\n`\r\n\r\n// const\r\n\r\nexport const Header: React.FC = props => {\r\n    return (\r\n        <Base>\r\n            <Brand>\r\n                <span>Sebastian Salines</span>\r\n                <span className=\"sub\">Software developer</span>\r\n            </Brand>\r\n        </Base>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/github.73f39d9d.svg\";","export default __webpack_public_path__ + \"static/media/at-sign.7c1b7931.svg\";","export default __webpack_public_path__ + \"static/media/gitlab.330cd16d.svg\";","export default __webpack_public_path__ + \"static/media/globe.79d413cc.svg\";","export default __webpack_public_path__ + \"static/media/home.0387e93a.svg\";","export default __webpack_public_path__ + \"static/media/mail.0745cea7.svg\";","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { Icon } from \"../../interfaces\";\r\n\r\nimport IconGithub from '../../assets/icons/github.svg'\r\nimport IconAtSign from '../../assets/icons/at-sign.svg'\r\nimport IconGitlab from '../../assets/icons/gitlab.svg'\r\nimport IconGlobe from '../../assets/icons/globe.svg'\r\nimport IconHome from '../../assets/icons/home.svg'\r\nimport IconMail from '../../assets/icons/mail.svg'\r\n\r\nconst allIcons = {\r\n    'github': IconGithub,\r\n    'at-sign': IconAtSign,\r\n    'gitlab': IconGitlab,\r\n    'globe': IconGlobe,\r\n    'home': IconHome,\r\n    'mail': IconMail,\r\n}\r\n\r\nconst Img: React.FC<React.HTMLProps<HTMLImageElement>> = styled.img`\r\n${props => css`\r\nwidth: 20px;\r\nheight: auto;\r\n`}\r\n`\r\n\r\nexport const SvgIcon: React.FC<React.HTMLProps<HTMLImageElement> & { icon: Icon }> = props => {\r\n    const { icon, ...imgProps } = props\r\n    return (\r\n        <Img src={allIcons[icon]} {...imgProps} />\r\n    )\r\n}","import styled, { css } from 'styled-components'\r\nimport { responsive } from '../../helpers'\r\nimport { Icon } from '../../interfaces'\r\nimport { SvgIcon } from '../SvgIcon'\r\n\r\nconst Section = styled.section`\r\n${props => css`\r\ncolor: ${props.theme.colors.white};\r\nfont-family: '${props.theme.font.body}', serif;\r\nfont-weight: medium;\r\ntext-align: center;\r\npadding: 0 18px;\r\nmargin: 18px 0;\r\nh2 {\r\n    padding: 0;\r\n    margin: 8px 0;\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    color: ${props.theme.colors.lowContrast};\r\n}\r\n\r\n${responsive({\r\n    gtemd: css`\r\n        padding: 0 62px;\r\n        margin-bottom: 36px;\r\n        h2 {\r\n            font-size: 18px;\r\n        };\r\n    `,\r\n})}\r\n`}\r\n`\r\n\r\nconst ProjectCard = styled.a`\r\n${props => css`\r\ncolor: ${props.theme.colors.white};\r\nfont-family: '${props.theme.font.body}', serif;\r\ndisplay: inline-flex;\r\nflex-flow: row nowrap;\r\nalign-items: center;\r\njustify-content: center;\r\nborder-radius: 4px;\r\nbackground-color: ${props.theme.colors.secondary};\r\npadding: 6px 8px;\r\ntext-decoration: none;\r\nmargin-bottom: 6px;\r\n\r\n&:not(:first-of-type) {\r\n    margin-left: 8px;\r\n}\r\n\r\nimg {\r\n    width: 22px;\r\n    margin-right: 8px;\r\n}\r\n\r\n`}\r\n`\r\n\r\nconst Stack = styled.span`\r\n${props => css`\r\ndisplay: inline-flex;\r\nflex-flow: column nowrap;\r\nspan {\r\n    text-align: left;\r\n    font-size: 16px;\r\n    line-height: 18px;\r\n    &.sub {\r\n        font-size: 12px;\r\n        line-height: 14px;\r\n        color: ${props.theme.colors.grey};\r\n    }\r\n}\r\n\r\n`}\r\n`\r\n\r\nconst Grid = styled.div`\r\n${props => css`\r\ndisplay: inline-flex;\r\nflex-flow: row wrap;\r\njustify-content: center;\r\n\r\n${responsive({\r\n    gtemd: css`\r\n    max-width: 580px;\r\n    `,\r\n})}\r\n`}\r\n`\r\n\r\ninterface ProjectProps {\r\n    title: string\r\n    url: string\r\n    lang: string\r\n    icon?: Icon\r\n}\r\n\r\nconst allProjects: ProjectProps[] = [\r\n    {\r\n        url: 'https://github.com/sebasalines/sebasalines',\r\n        title: 'this-portfolio',\r\n        lang: 'React',\r\n    },\r\n    {\r\n        url: 'https://poweredbyliquid.com',\r\n        title: 'Liquid',\r\n        icon: 'globe',\r\n        lang: 'Angular, .NET',\r\n    },\r\n    {\r\n        url: 'https://github.com/sebasalines/electron-react-ts',\r\n        title: 'electron-react-ts',\r\n        lang: 'Electron, React',\r\n    },\r\n    {\r\n        url: 'https://www.socialwyze.com',\r\n        title: 'Socialwyze',\r\n        icon: 'globe',\r\n        lang: 'React Native',\r\n    },\r\n    {\r\n        url: 'https://github.com/sebasalines/spotifier',\r\n        title: 'spotifier',\r\n        lang: 'Angular',\r\n    },\r\n    {\r\n        url: 'https://jobcirc.com',\r\n        title: 'JobCirc',\r\n        icon: 'globe',\r\n        lang: 'Graphql, Angular',\r\n    },\r\n    {\r\n        url: 'https://github.com/sebasalines/gql-dashboard',\r\n        title: 'gql-dashboard',\r\n        lang: 'Graphql, Angular, React',\r\n    },\r\n    \r\n]\r\n\r\n\r\nconst Project: React.FC<ProjectProps> = props => {\r\n    const icon = props.icon || 'github'\r\n    return (\r\n        <ProjectCard href={props.url} target=\"_blank\">\r\n            <SvgIcon icon={icon} alt={props.title} />\r\n            <Stack>\r\n                <span>{props.title}</span>\r\n                <span className=\"sub\">{props.lang}</span>\r\n            </Stack>\r\n        </ProjectCard>\r\n    )\r\n}\r\n\r\n\r\nexport const Projects: React.FC = props => {\r\n    return (\r\n        <Section>\r\n            <h2>Some of what I've worked on recently...</h2>\r\n            <Grid>\r\n                {allProjects.map(project => <Project key={`project_${project.url}`}  {...project} />)}\r\n            </Grid>\r\n        </Section>\r\n    )\r\n}","import { useEffect, useState } from 'react'\r\nimport styled, { css } from 'styled-components'\r\nimport { getRandom, responsive } from '../../helpers'\r\n\r\nconst references: ReferenceProps[] = [\r\n    {\r\n        name: 'Gabriel Alvez',\r\n        email: 'gabrielalvez727@gmail.com',\r\n    },\r\n    {\r\n        name: 'Ernesto Vera',\r\n        email: 'emrevera@gmail.com',\r\n    },\r\n    {\r\n        name: 'Christian Serron',\r\n        email: 'christian@bros.me',\r\n    },\r\n    {\r\n        name: 'Rodrigo Techera',\r\n        email: 'rodrigo.webtools@gmail.com',\r\n    },\r\n    {\r\n        name: 'Ismael Larrosa',\r\n        email: 'ismael@capicua.com.uy',\r\n    },\r\n    {\r\n        name: 'Yanick Tourn',\r\n        email: 'yanickt@amazon.com',\r\n    },\r\n    {\r\n        name: 'Schubert Tabarez',\r\n        email: 'stf9331@gmail.com',\r\n    },\r\n    {\r\n        name: 'Saujin Yi',\r\n        email: 'syi@poweredbyliquid.com',\r\n    },\r\n    {\r\n        name: 'Brooke Souza',\r\n        email: 'brooke@poweredbyliquid.com',\r\n    },\r\n    {\r\n        name: 'Tamra Johnson',\r\n        email: 'tamra@poweredbyliquid.com',\r\n    },\r\n    {\r\n        name: 'Max Cadenasso',\r\n        email: 'maxcadenasso@jobcirc.com',\r\n    },\r\n    {\r\n        name: 'Cody Merrill',\r\n        email: 'cody@socialwyze.com',\r\n    },\r\n]\r\n\r\nconst randomRefs = getRandom(references, references.length)\r\n\r\nconst Section = styled.section`\r\n${props => css`\r\ncolor: ${props.theme.colors.white};\r\nfont-family: '${props.theme.font.body}', serif;\r\nfont-weight: medium;\r\nfont-size: 14px;\r\ntext-align: center;\r\npadding: 0 18px;\r\nwidth: 100%;\r\nmargin: 28px 0 14px 0;\r\n\r\n\r\nh5 {\r\n    margin: 0 0 4px 0;\r\n    padding: 0;\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    color: ${props.theme.colors.lowContrast};\r\n}\r\n\r\n${responsive({\r\n    gtemd: css`\r\n    h5 {\r\n        font-size: 16px;\r\n    }\r\n    `\r\n})}\r\n`}\r\n`\r\n\r\nconst ReferenceContainer = styled.article`\r\n${props => css`\r\ncolor: ${props.theme.colors.white};\r\nfont-family: '${props.theme.font.body}', serif;\r\nspan {\r\n    display: block;\r\n    font-family: '${props.theme.font.fancy}', serif;\r\n    font-size: 16px;\r\n    line-height: 18px;\r\n    ${responsive({\r\n    gtemd: css`\r\n    font-size: 20px;\r\n    line-height: 24px;\r\n    `\r\n})}\r\n}\r\na {\r\n    color: ${props.theme.colors.lowContrast};\r\n    font-family: '${props.theme.font.body}', serif;\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n`}\r\n`\r\n\r\nconst Grid = styled.div`\r\n${props => css`\r\ndisplay: grid;\r\ngrid-gap: 8px;\r\ngrid-template-rows: auto;\r\n\r\n${responsive({\r\n    gtemd: css`\r\n        grid-template-columns: 1fr 1fr;\r\n        max-width: 480px;\r\n        margin: 0 auto;\r\n    `\r\n})}\r\n\r\n`}\r\n`\r\n\r\nconst Button = styled.button`\r\n${props => css`\r\ndisplay: inline;\r\ntext-decoration: underline;\r\nbackground: none;\r\nborder: none;\r\nfont-size: 10px;\r\npadding: 0;\r\nmargin: 0;\r\ncolor: ${props.theme.colors.lowContrast};\r\ncursor: pointer;\r\n\r\n${responsive({\r\n    gtemd: css`\r\n    font-size: 12px;\r\n    `\r\n})}\r\n`}\r\n`\r\n\r\ninterface ReferenceProps {\r\n    name: string\r\n    email: string\r\n}\r\n\r\nconst Reference: React.FC<ReferenceProps> = props => {\r\n    return (\r\n        <ReferenceContainer>\r\n            <span>{props.name}</span>\r\n            <a href={`mailto:${props.email}`} target=\"_blank\" rel=\"noreferrer\">{props.email}</a>\r\n        </ReferenceContainer>\r\n    )\r\n}\r\n\r\n\r\nexport const References: React.FC = props => {\r\n    const pageSize = 2\r\n    const maxPage = Math.ceil(randomRefs.length / pageSize)\r\n    const paginate = (i: number = 0) => [...randomRefs].slice(i * pageSize, i * pageSize + 2)\r\n\r\n    const [pageIndex, setPageIndex] = useState(0)\r\n    const [refs, setRefs] = useState(paginate(pageIndex))\r\n\r\n    useEffect(() => {\r\n        setRefs(paginate(pageIndex))\r\n    }, [pageIndex])\r\n\r\n    const loadMore = () => setPageIndex(pageIndex + 1 < maxPage ? pageIndex + 1 : 0)\r\n    return (\r\n        <Section>\r\n            <h5>Some of my references...</h5>\r\n            <Grid>\r\n                {refs.map(ref => <Reference key={`references_${ref?.email}`} {...ref} />)}\r\n            </Grid>\r\n            <Button onClick={() => loadMore()}>...more references?</Button>\r\n        </Section>\r\n    )\r\n}","// CREDIT: https://www.codegrepper.com/code-examples/javascript/get+3+random+items+from+array+javascript\r\nexport function getRandom(arr: any[], n: number = 2) {\r\n    var result = new Array(n),\r\n        len = arr.length,\r\n        taken = new Array(len);\r\n    if (n > len)\r\n        throw new RangeError(\"getRandom: more elements taken than available\");\r\n    while (n--) {\r\n        var x = Math.floor(Math.random() * len);\r\n        result[n] = arr[x in taken ? taken[x] : x];\r\n        taken[x] = --len in taken ? taken[len] : len;\r\n    }\r\n    return result;\r\n}","import React from \"react\";\r\nimport styled, { css } from \"styled-components\";\r\nimport { Contact } from \"../Contact\";\r\nimport { Cta } from \"../Cta\";\r\nimport { Footer } from \"../Footer\";\r\nimport { Header } from \"../Header\";\r\nimport { Projects } from \"../Projects\";\r\nimport { References } from \"../References\";\r\n\r\nconst Column = styled.div`\r\n${props => css`\r\nflex: 1;\r\ndisplay: flex;\r\nflex-flow: column nowrap;\r\nbackground-color: ${props.theme.colors.primary};\r\n\r\nmain {\r\n    flex: 1;\r\n    /* display: flex;\r\n    flex-flow: column nowrap; */\r\n    background-color: ${props.theme.colors.primary};\r\n}\r\n\r\n`}\r\n`\r\n\r\nconst Content = styled.main`\r\n${props => css`\r\ndisplay: flex;\r\nflex-flow: column nowrap;\r\nwidth: 100%;\r\nbackground-color: ${props.theme.colors.primary};\r\n`}\r\n`\r\n\r\nexport const Presentation: React.FC = props => {\r\n    return (\r\n        <Column>\r\n            <main>\r\n                <Header />\r\n                <Cta>\r\n                    Let's do some software stuff, maybe?\r\n                </Cta>\r\n                <Projects />\r\n                <Contact />\r\n                <References />\r\n            </main>\r\n            <Footer />\r\n        </Column>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { Presentation } from './components/Presentation';\r\n\r\nconst appTheme = {\r\n  colors: {\r\n    primary: '#322E2E',\r\n    secondary: '#3F3939',\r\n    white: '#FFFFF6',\r\n    lowContrast: '#fffff6b4',\r\n    grey: '#fffff669',\r\n  },\r\n  font: {\r\n    body: 'Hind',\r\n    fancy: 'Rozha One',\r\n  },\r\n}\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <ThemeProvider theme={appTheme}>\r\n      <Presentation />\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}